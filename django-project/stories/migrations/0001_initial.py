# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-30 15:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['slug'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=512)),
                ('lat', models.FloatField(verbose_name='Latitude')),
                ('long', models.FloatField(verbose_name='Longitude')),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['slug'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('first_name', models.CharField(max_length=1024)),
                ('second_name', models.CharField(max_length=1024)),
                ('title', models.CharField(blank=True, max_length=1024)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['slug'],
                'verbose_name_plural': 'people',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=512)),
                ('center_lat', models.FloatField(verbose_name='Map Center Latitude')),
                ('center_long', models.FloatField(verbose_name='Map Center Longitude')),
                ('map_zoom', models.IntegerField(default=11)),
                ('image', models.ImageField(blank=True, upload_to=b'')),
                ('video_embed_url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['slug'],
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('title', models.CharField(max_length=1024)),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('audio_file', models.FileField(upload_to=b'', verbose_name='Story MP3 Audio')),
                ('photo', models.ImageField(blank=True, upload_to=b'', verbose_name='Story Photo')),
                ('issues', models.ManyToManyField(related_name='stories', related_query_name='story', to='stories.Issue')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', related_query_name='story', to='stories.Location')),
                ('people', models.ManyToManyField(related_name='stories', related_query_name='story', to='stories.Person')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', related_query_name='story', to='stories.Region')),
            ],
            options={
                'ordering': ['date', 'slug'],
                'verbose_name_plural': 'stories',
            },
        ),
    ]
